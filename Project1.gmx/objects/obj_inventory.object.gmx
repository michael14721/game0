<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Itemlist:
image0 = Weird Head
image1 = Scary Potion
image2 = Amulet of Death
image3 = Skull
*/

//variables
globalvar showInv; 
showInv = true;

globalvar maxItems;
maxItems = 10;

// Create all item slots and assign their id's
for (i = 0; i &lt; maxItems; i += 1) {
    global.inventory[i] = -1;
    button[i] = instance_create(0, 0, obj_invbutton);
    button[i].slot = i;
}

globalvar mouseItem;
mouseItem = -1;

/*
amuletCheck = scr_item_check(2);
if (amuletcheck == 1)
{
//you have a sword.
]
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (showInv) {
    var x1, x2, y1, y2;
    /*
    x1 = view_xview + 64;
    x2 = x1 + view_wview - 128;
    y1 = view_yview + view_hview - 64;
    y2 = y1 + 64;
    */
    x1 = view_xview + 64;
    x2 = x1 + view_wview;
    y1 = view_yview + view_hview;
    y2 = y1 - 64;
    
    draw_set_color(c_black);
    draw_set_alpha(0.8);
    draw_rectangle(x1, y1, x2, y2, false);
    draw_set_alpha(1);
    
    // Update all buttons positions
    for (i = 0 ; i &lt; maxItems; i +=1) {
        button[i].x = x1 + 24 + (i * 40);
        button[i].y = y2 + 24;
        draw_sprite(spr_border, 0, button[i].x, button[i].y);
    }
    
    // Draw mouse item
    if (mouseItem != -1) {
        draw_sprite(spr_items, mouseItem, mouse_x, mouse_y);
    } else {
        if (mouse_check_button_released(mb_left)) {
            mouseItem = -1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var additem = scr_item_pickup(random(3));

if (additem == 0) {
    //inventory is full
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
